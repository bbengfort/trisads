// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetVASPRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVASPRequest) Reset()         { *m = GetVASPRequest{} }
func (m *GetVASPRequest) String() string { return proto.CompactTextString(m) }
func (*GetVASPRequest) ProtoMessage()    {}
func (*GetVASPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *GetVASPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVASPRequest.Unmarshal(m, b)
}
func (m *GetVASPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVASPRequest.Marshal(b, m, deterministic)
}
func (m *GetVASPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVASPRequest.Merge(m, src)
}
func (m *GetVASPRequest) XXX_Size() int {
	return xxx_messageInfo_GetVASPRequest.Size(m)
}
func (m *GetVASPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVASPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVASPRequest proto.InternalMessageInfo

func (m *GetVASPRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetVASPReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Vasp                 *VASP    `protobuf:"bytes,2,opt,name=vasp,proto3" json:"vasp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVASPReply) Reset()         { *m = GetVASPReply{} }
func (m *GetVASPReply) String() string { return proto.CompactTextString(m) }
func (*GetVASPReply) ProtoMessage()    {}
func (*GetVASPReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *GetVASPReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVASPReply.Unmarshal(m, b)
}
func (m *GetVASPReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVASPReply.Marshal(b, m, deterministic)
}
func (m *GetVASPReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVASPReply.Merge(m, src)
}
func (m *GetVASPReply) XXX_Size() int {
	return xxx_messageInfo_GetVASPReply.Size(m)
}
func (m *GetVASPReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVASPReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetVASPReply proto.InternalMessageInfo

func (m *GetVASPReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetVASPReply) GetVasp() *VASP {
	if m != nil {
		return m.Vasp
	}
	return nil
}

type LookupVASPRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupVASPRequest) Reset()         { *m = LookupVASPRequest{} }
func (m *LookupVASPRequest) String() string { return proto.CompactTextString(m) }
func (*LookupVASPRequest) ProtoMessage()    {}
func (*LookupVASPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *LookupVASPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupVASPRequest.Unmarshal(m, b)
}
func (m *LookupVASPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupVASPRequest.Marshal(b, m, deterministic)
}
func (m *LookupVASPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupVASPRequest.Merge(m, src)
}
func (m *LookupVASPRequest) XXX_Size() int {
	return xxx_messageInfo_LookupVASPRequest.Size(m)
}
func (m *LookupVASPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupVASPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupVASPRequest proto.InternalMessageInfo

func (m *LookupVASPRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type LookupVASPReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Vasps                []*VASP  `protobuf:"bytes,2,rep,name=vasps,proto3" json:"vasps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupVASPReply) Reset()         { *m = LookupVASPReply{} }
func (m *LookupVASPReply) String() string { return proto.CompactTextString(m) }
func (*LookupVASPReply) ProtoMessage()    {}
func (*LookupVASPReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *LookupVASPReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupVASPReply.Unmarshal(m, b)
}
func (m *LookupVASPReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupVASPReply.Marshal(b, m, deterministic)
}
func (m *LookupVASPReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupVASPReply.Merge(m, src)
}
func (m *LookupVASPReply) XXX_Size() int {
	return xxx_messageInfo_LookupVASPReply.Size(m)
}
func (m *LookupVASPReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupVASPReply.DiscardUnknown(m)
}

var xxx_messageInfo_LookupVASPReply proto.InternalMessageInfo

func (m *LookupVASPReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LookupVASPReply) GetVasps() []*VASP {
	if m != nil {
		return m.Vasps
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "proto.Error")
	proto.RegisterType((*GetVASPRequest)(nil), "proto.GetVASPRequest")
	proto.RegisterType((*GetVASPReply)(nil), "proto.GetVASPReply")
	proto.RegisterType((*LookupVASPRequest)(nil), "proto.LookupVASPRequest")
	proto.RegisterType((*LookupVASPReply)(nil), "proto.LookupVASPReply")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xdf, 0xe4, 0xed, 0x5a, 0x32, 0x89, 0x11, 0xc7, 0x3f, 0x84, 0x5c, 0x8c, 0x7b, 0xaa,
	0x97, 0x1e, 0x22, 0xe2, 0xd5, 0x82, 0x22, 0x82, 0x07, 0xd9, 0x88, 0x78, 0x8d, 0xcd, 0x22, 0xc1,
	0x94, 0xdd, 0xee, 0x26, 0x42, 0x3e, 0x83, 0x5f, 0x5a, 0x3a, 0x1b, 0xb5, 0x56, 0x0f, 0x9e, 0x92,
	0x99, 0xe7, 0x99, 0xf9, 0x3d, 0xb3, 0x10, 0x94, 0xba, 0x9e, 0x6a, 0xa3, 0x5a, 0x85, 0x8c, 0x3e,
	0x69, 0xb4, 0x50, 0x95, 0x6c, 0xac, 0x6b, 0xf2, 0x33, 0x60, 0x57, 0xc6, 0x28, 0x83, 0x08, 0xa3,
	0xb9, 0xaa, 0x64, 0xe2, 0x65, 0xde, 0x84, 0x09, 0xfa, 0xc7, 0x04, 0xc6, 0x0b, 0x69, 0x6d, 0xf9,
	0x2c, 0x13, 0x3f, 0xf3, 0x26, 0x81, 0xf8, 0x28, 0x79, 0x06, 0xf1, 0xb5, 0x6c, 0x1f, 0x66, 0xc5,
	0x9d, 0x90, 0xcb, 0x4e, 0xda, 0x16, 0x63, 0xf0, 0xeb, 0x8a, 0xa6, 0xb7, 0x85, 0x5f, 0x57, 0xbc,
	0x80, 0xe8, 0xd3, 0xa1, 0x9b, 0x1e, 0x39, 0x30, 0xb9, 0x02, 0x91, 0x25, 0xcc, 0x23, 0xc7, 0x9f,
	0x12, 0x5c, 0x38, 0x09, 0x8f, 0x60, 0xf4, 0x5a, 0x5a, 0x4d, 0xb0, 0x30, 0x0f, 0x07, 0x0b, 0xed,
	0x20, 0x81, 0x9f, 0xc0, 0xee, 0xad, 0x52, 0x2f, 0x9d, 0x5e, 0x27, 0xef, 0x03, 0x5b, 0x76, 0xd2,
	0xf4, 0xb4, 0x39, 0x10, 0xae, 0xe0, 0x8f, 0xb0, 0xb3, 0x6e, 0xfd, 0x6b, 0x84, 0x63, 0x60, 0x2b,
	0x92, 0x4d, 0xfc, 0xec, 0xff, 0x66, 0x06, 0xa7, 0xe4, 0x6f, 0x1e, 0xc4, 0xf7, 0xe2, 0xa6, 0x98,
	0x5d, 0xd6, 0x46, 0xce, 0x5b, 0x65, 0x7a, 0x3c, 0x87, 0xf1, 0x70, 0x2c, 0x1e, 0x0c, 0x13, 0xdf,
	0x9f, 0x27, 0xdd, 0xdb, 0x6c, 0xeb, 0xa6, 0xe7, 0xff, 0xf0, 0x02, 0xe0, 0x2b, 0x25, 0x26, 0x83,
	0xe9, 0xc7, 0x8d, 0xe9, 0xe1, 0x2f, 0x0a, 0x6d, 0x78, 0xda, 0x22, 0xe1, 0xf4, 0x3d, 0x00, 0x00,
	0xff, 0xff, 0xd6, 0x77, 0x1d, 0x7f, 0xe9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TRISADirectoryClient is the client API for TRISADirectory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TRISADirectoryClient interface {
	GetVASP(ctx context.Context, in *GetVASPRequest, opts ...grpc.CallOption) (*GetVASPReply, error)
	LookupVASP(ctx context.Context, in *LookupVASPRequest, opts ...grpc.CallOption) (*LookupVASPReply, error)
}

type tRISADirectoryClient struct {
	cc *grpc.ClientConn
}

func NewTRISADirectoryClient(cc *grpc.ClientConn) TRISADirectoryClient {
	return &tRISADirectoryClient{cc}
}

func (c *tRISADirectoryClient) GetVASP(ctx context.Context, in *GetVASPRequest, opts ...grpc.CallOption) (*GetVASPReply, error) {
	out := new(GetVASPReply)
	err := c.cc.Invoke(ctx, "/proto.TRISADirectory/GetVASP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tRISADirectoryClient) LookupVASP(ctx context.Context, in *LookupVASPRequest, opts ...grpc.CallOption) (*LookupVASPReply, error) {
	out := new(LookupVASPReply)
	err := c.cc.Invoke(ctx, "/proto.TRISADirectory/LookupVASP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TRISADirectoryServer is the server API for TRISADirectory service.
type TRISADirectoryServer interface {
	GetVASP(context.Context, *GetVASPRequest) (*GetVASPReply, error)
	LookupVASP(context.Context, *LookupVASPRequest) (*LookupVASPReply, error)
}

func RegisterTRISADirectoryServer(s *grpc.Server, srv TRISADirectoryServer) {
	s.RegisterService(&_TRISADirectory_serviceDesc, srv)
}

func _TRISADirectory_GetVASP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVASPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TRISADirectoryServer).GetVASP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TRISADirectory/GetVASP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TRISADirectoryServer).GetVASP(ctx, req.(*GetVASPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TRISADirectory_LookupVASP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupVASPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TRISADirectoryServer).LookupVASP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TRISADirectory/LookupVASP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TRISADirectoryServer).LookupVASP(ctx, req.(*LookupVASPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TRISADirectory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TRISADirectory",
	HandlerType: (*TRISADirectoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVASP",
			Handler:    _TRISADirectory_GetVASP_Handler,
		},
		{
			MethodName: "LookupVASP",
			Handler:    _TRISADirectory_LookupVASP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
