// Code generated by protoc-gen-go. DO NOT EDIT.
// source: models.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VASP struct {
	Id                     uint32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VaspEntity             *Entity             `protobuf:"bytes,2,opt,name=vaspEntity,proto3" json:"vaspEntity,omitempty"`
	VaspTRISACertification *TRISACertification `protobuf:"bytes,3,opt,name=vaspTRISACertification,proto3" json:"vaspTRISACertification,omitempty"`
	FirstListed            string              `protobuf:"bytes,4,opt,name=firstListed,proto3" json:"firstListed,omitempty"`
	LastUpdated            string              `protobuf:"bytes,5,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *VASP) Reset()         { *m = VASP{} }
func (m *VASP) String() string { return proto.CompactTextString(m) }
func (*VASP) ProtoMessage()    {}
func (*VASP) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{0}
}

func (m *VASP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VASP.Unmarshal(m, b)
}
func (m *VASP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VASP.Marshal(b, m, deterministic)
}
func (m *VASP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VASP.Merge(m, src)
}
func (m *VASP) XXX_Size() int {
	return xxx_messageInfo_VASP.Size(m)
}
func (m *VASP) XXX_DiscardUnknown() {
	xxx_messageInfo_VASP.DiscardUnknown(m)
}

var xxx_messageInfo_VASP proto.InternalMessageInfo

func (m *VASP) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VASP) GetVaspEntity() *Entity {
	if m != nil {
		return m.VaspEntity
	}
	return nil
}

func (m *VASP) GetVaspTRISACertification() *TRISACertification {
	if m != nil {
		return m.VaspTRISACertification
	}
	return nil
}

func (m *VASP) GetFirstListed() string {
	if m != nil {
		return m.FirstListed
	}
	return ""
}

func (m *VASP) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

type Entity struct {
	Id                      uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VaspFullLegalName       string   `protobuf:"bytes,2,opt,name=vaspFullLegalName,proto3" json:"vaspFullLegalName,omitempty"`
	VaspFullLegalAddress    string   `protobuf:"bytes,3,opt,name=vaspFullLegalAddress,proto3" json:"vaspFullLegalAddress,omitempty"`
	VaspIncorporationDate   string   `protobuf:"bytes,4,opt,name=vaspIncorporationDate,proto3" json:"vaspIncorporationDate,omitempty"`
	VaspIncorporationNumber string   `protobuf:"bytes,5,opt,name=vaspIncorporationNumber,proto3" json:"vaspIncorporationNumber,omitempty"`
	VaspLEINumber           string   `protobuf:"bytes,6,opt,name=vaspLEINumber,proto3" json:"vaspLEINumber,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{1}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entity) GetVaspFullLegalName() string {
	if m != nil {
		return m.VaspFullLegalName
	}
	return ""
}

func (m *Entity) GetVaspFullLegalAddress() string {
	if m != nil {
		return m.VaspFullLegalAddress
	}
	return ""
}

func (m *Entity) GetVaspIncorporationDate() string {
	if m != nil {
		return m.VaspIncorporationDate
	}
	return ""
}

func (m *Entity) GetVaspIncorporationNumber() string {
	if m != nil {
		return m.VaspIncorporationNumber
	}
	return ""
}

func (m *Entity) GetVaspLEINumber() string {
	if m != nil {
		return m.VaspLEINumber
	}
	return ""
}

type TRISACertification struct {
	Id                   uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SubjectName          *Name          `protobuf:"bytes,2,opt,name=subjectName,proto3" json:"subjectName,omitempty"`
	IssuerName           *Name          `protobuf:"bytes,3,opt,name=issuerName,proto3" json:"issuerName,omitempty"`
	SerialNumber         []byte         `protobuf:"bytes,4,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	Version              string         `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	SignatureAlgorithm   string         `protobuf:"bytes,6,opt,name=signatureAlgorithm,proto3" json:"signatureAlgorithm,omitempty"`
	Parameters           []string       `protobuf:"bytes,7,rep,name=parameters,proto3" json:"parameters,omitempty"`
	NotValidBefore       string         `protobuf:"bytes,8,opt,name=notValidBefore,proto3" json:"notValidBefore,omitempty"`
	NotValidAfter        string         `protobuf:"bytes,9,opt,name=notValidAfter,proto3" json:"notValidAfter,omitempty"`
	PublicKeyInfo        *PublicKeyInfo `protobuf:"bytes,10,opt,name=PublicKeyInfo,proto3" json:"PublicKeyInfo,omitempty"`
	Revoked              bool           `protobuf:"varint,11,opt,name=revoked,proto3" json:"revoked,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TRISACertification) Reset()         { *m = TRISACertification{} }
func (m *TRISACertification) String() string { return proto.CompactTextString(m) }
func (*TRISACertification) ProtoMessage()    {}
func (*TRISACertification) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{2}
}

func (m *TRISACertification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TRISACertification.Unmarshal(m, b)
}
func (m *TRISACertification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TRISACertification.Marshal(b, m, deterministic)
}
func (m *TRISACertification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TRISACertification.Merge(m, src)
}
func (m *TRISACertification) XXX_Size() int {
	return xxx_messageInfo_TRISACertification.Size(m)
}
func (m *TRISACertification) XXX_DiscardUnknown() {
	xxx_messageInfo_TRISACertification.DiscardUnknown(m)
}

var xxx_messageInfo_TRISACertification proto.InternalMessageInfo

func (m *TRISACertification) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TRISACertification) GetSubjectName() *Name {
	if m != nil {
		return m.SubjectName
	}
	return nil
}

func (m *TRISACertification) GetIssuerName() *Name {
	if m != nil {
		return m.IssuerName
	}
	return nil
}

func (m *TRISACertification) GetSerialNumber() []byte {
	if m != nil {
		return m.SerialNumber
	}
	return nil
}

func (m *TRISACertification) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *TRISACertification) GetSignatureAlgorithm() string {
	if m != nil {
		return m.SignatureAlgorithm
	}
	return ""
}

func (m *TRISACertification) GetParameters() []string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *TRISACertification) GetNotValidBefore() string {
	if m != nil {
		return m.NotValidBefore
	}
	return ""
}

func (m *TRISACertification) GetNotValidAfter() string {
	if m != nil {
		return m.NotValidAfter
	}
	return ""
}

func (m *TRISACertification) GetPublicKeyInfo() *PublicKeyInfo {
	if m != nil {
		return m.PublicKeyInfo
	}
	return nil
}

func (m *TRISACertification) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

type Name struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CommonName           string   `protobuf:"bytes,2,opt,name=commonName,proto3" json:"commonName,omitempty"`
	CountryRegion        string   `protobuf:"bytes,3,opt,name=countryRegion,proto3" json:"countryRegion,omitempty"`
	Organization         string   `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationalUnit   string   `protobuf:"bytes,5,opt,name=organizationalUnit,proto3" json:"organizationalUnit,omitempty"`
	Locality             string   `protobuf:"bytes,6,opt,name=locality,proto3" json:"locality,omitempty"`
	StateProvince        string   `protobuf:"bytes,7,opt,name=stateProvince,proto3" json:"stateProvince,omitempty"`
	SerialNumber         string   `protobuf:"bytes,8,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	IncCountryRegion     string   `protobuf:"bytes,9,opt,name=incCountryRegion,proto3" json:"incCountryRegion,omitempty"`
	IncStateProvince     string   `protobuf:"bytes,10,opt,name=incStateProvince,proto3" json:"incStateProvince,omitempty"`
	BusinessCategory     string   `protobuf:"bytes,11,opt,name=businessCategory,proto3" json:"businessCategory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{3}
}

func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (m *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(m, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Name) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *Name) GetCountryRegion() string {
	if m != nil {
		return m.CountryRegion
	}
	return ""
}

func (m *Name) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Name) GetOrganizationalUnit() string {
	if m != nil {
		return m.OrganizationalUnit
	}
	return ""
}

func (m *Name) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Name) GetStateProvince() string {
	if m != nil {
		return m.StateProvince
	}
	return ""
}

func (m *Name) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Name) GetIncCountryRegion() string {
	if m != nil {
		return m.IncCountryRegion
	}
	return ""
}

func (m *Name) GetIncStateProvince() string {
	if m != nil {
		return m.IncStateProvince
	}
	return ""
}

func (m *Name) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

type PublicKeyInfo struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Algorithm            string   `protobuf:"bytes,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Parameters           []string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Exponent             int64    `protobuf:"varint,5,opt,name=exponent,proto3" json:"exponent,omitempty"`
	KeySize              int64    `protobuf:"varint,6,opt,name=keySize,proto3" json:"keySize,omitempty"`
	KeyUsage             []string `protobuf:"bytes,7,rep,name=keyUsage,proto3" json:"keyUsage,omitempty"`
	Signature            []byte   `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKeyInfo) Reset()         { *m = PublicKeyInfo{} }
func (m *PublicKeyInfo) String() string { return proto.CompactTextString(m) }
func (*PublicKeyInfo) ProtoMessage()    {}
func (*PublicKeyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{4}
}

func (m *PublicKeyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKeyInfo.Unmarshal(m, b)
}
func (m *PublicKeyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKeyInfo.Marshal(b, m, deterministic)
}
func (m *PublicKeyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKeyInfo.Merge(m, src)
}
func (m *PublicKeyInfo) XXX_Size() int {
	return xxx_messageInfo_PublicKeyInfo.Size(m)
}
func (m *PublicKeyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKeyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKeyInfo proto.InternalMessageInfo

func (m *PublicKeyInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PublicKeyInfo) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *PublicKeyInfo) GetParameters() []string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *PublicKeyInfo) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *PublicKeyInfo) GetExponent() int64 {
	if m != nil {
		return m.Exponent
	}
	return 0
}

func (m *PublicKeyInfo) GetKeySize() int64 {
	if m != nil {
		return m.KeySize
	}
	return 0
}

func (m *PublicKeyInfo) GetKeyUsage() []string {
	if m != nil {
		return m.KeyUsage
	}
	return nil
}

func (m *PublicKeyInfo) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*VASP)(nil), "proto.VASP")
	proto.RegisterType((*Entity)(nil), "proto.Entity")
	proto.RegisterType((*TRISACertification)(nil), "proto.TRISACertification")
	proto.RegisterType((*Name)(nil), "proto.Name")
	proto.RegisterType((*PublicKeyInfo)(nil), "proto.PublicKeyInfo")
}

func init() { proto.RegisterFile("models.proto", fileDescriptor_0b5431a010549573) }

var fileDescriptor_0b5431a010549573 = []byte{
	// 678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0xd5, 0x66, 0x5f, 0x39, 0x6d, 0x27, 0xb0, 0x06, 0x04, 0x34, 0x4d, 0x55, 0x85, 0x50,
	0xc5, 0xc7, 0x2e, 0x06, 0x17, 0x88, 0xbb, 0x32, 0x86, 0x54, 0x31, 0x4d, 0xc3, 0x65, 0xbb, 0x77,
	0x93, 0xd3, 0x62, 0x96, 0xd8, 0x91, 0xed, 0x54, 0x74, 0x4f, 0xc1, 0x35, 0x8f, 0xc1, 0xf3, 0xf0,
	0x06, 0xbc, 0x04, 0xb2, 0x93, 0x66, 0x49, 0xd3, 0x5d, 0x55, 0xe7, 0x77, 0xfe, 0x8e, 0x7d, 0xce,
	0xff, 0x9c, 0x42, 0x37, 0x91, 0x11, 0xc6, 0xfa, 0x38, 0x55, 0xd2, 0x48, 0xb2, 0xed, 0x7e, 0x06,
	0x7f, 0x5b, 0xb0, 0x75, 0x3d, 0x9a, 0x5c, 0x92, 0x7d, 0x68, 0xf3, 0x28, 0x68, 0xf5, 0x5b, 0xc3,
	0x1e, 0x6d, 0xf3, 0x88, 0xbc, 0x01, 0x58, 0x30, 0x9d, 0x9e, 0x09, 0xc3, 0xcd, 0x32, 0x68, 0xf7,
	0x5b, 0xc3, 0xce, 0x49, 0x2f, 0x3f, 0x7b, 0x9c, 0x43, 0x5a, 0x11, 0x90, 0xaf, 0xf0, 0xd8, 0x46,
	0xdf, 0xe8, 0x78, 0x32, 0x3a, 0x45, 0x65, 0xf8, 0x8c, 0x87, 0xcc, 0x70, 0x29, 0x02, 0xcf, 0x1d,
	0x7d, 0x5a, 0x1c, 0x6d, 0x0a, 0xe8, 0x3d, 0x07, 0x49, 0x1f, 0x3a, 0x33, 0xae, 0xb4, 0x39, 0xe7,
	0xda, 0x60, 0x14, 0x6c, 0xf5, 0x5b, 0x43, 0x9f, 0x56, 0x91, 0x55, 0xc4, 0x4c, 0x9b, 0xab, 0x34,
	0x62, 0x56, 0xb1, 0x9d, 0x2b, 0x2a, 0x68, 0xf0, 0xab, 0x0d, 0x3b, 0xc5, 0x0b, 0xd7, 0x0b, 0x7c,
	0x0d, 0x0f, 0xed, 0xc5, 0x9f, 0xb3, 0x38, 0x3e, 0xc7, 0x39, 0x8b, 0x2f, 0x58, 0x82, 0xae, 0x4e,
	0x9f, 0x36, 0x13, 0xe4, 0x04, 0x0e, 0x6a, 0x70, 0x14, 0x45, 0x0a, 0xb5, 0x76, 0xd5, 0xf9, 0x74,
	0x63, 0x8e, 0xbc, 0x83, 0x47, 0x96, 0x8f, 0x45, 0x28, 0x55, 0x2a, 0x95, 0xab, 0xea, 0x13, 0x33,
	0x58, 0x94, 0xb2, 0x39, 0x49, 0xde, 0xc3, 0x93, 0x46, 0xe2, 0x22, 0x4b, 0xa6, 0xa8, 0x8a, 0x02,
	0xef, 0x4b, 0x93, 0xe7, 0xd0, 0xb3, 0xa9, 0xf3, 0xb3, 0x71, 0xa1, 0xdf, 0x71, 0xfa, 0x3a, 0x1c,
	0xfc, 0xf1, 0x80, 0x6c, 0xe8, 0x76, 0xd3, 0xff, 0x8e, 0xce, 0xa6, 0x3f, 0x30, 0x34, 0x65, 0x63,
	0x3a, 0x27, 0x9d, 0xc2, 0x45, 0x8b, 0x68, 0x35, 0x4f, 0x5e, 0x01, 0x70, 0xad, 0x33, 0x54, 0x4e,
	0xed, 0x35, 0xd5, 0x95, 0x34, 0x19, 0x40, 0x57, 0xa3, 0xe2, 0x2c, 0x2e, 0xde, 0x69, 0xfb, 0xd1,
	0xa5, 0x35, 0x46, 0x02, 0xd8, 0x5d, 0xa0, 0xd2, 0x76, 0x82, 0xf2, 0xb2, 0x57, 0x21, 0x39, 0x06,
	0xa2, 0xf9, 0x5c, 0x30, 0x93, 0x29, 0x1c, 0xc5, 0x73, 0xa9, 0xb8, 0xf9, 0x9e, 0x14, 0xb5, 0x6e,
	0xc8, 0x90, 0x23, 0x80, 0x94, 0x29, 0x96, 0xa0, 0x41, 0xa5, 0x83, 0xdd, 0xbe, 0x37, 0xf4, 0x69,
	0x85, 0x90, 0x17, 0xb0, 0x2f, 0xa4, 0xb9, 0x66, 0x31, 0x8f, 0x3e, 0xe2, 0x4c, 0x2a, 0x0c, 0xf6,
	0xdc, 0xb7, 0xd6, 0xa8, 0x6d, 0xef, 0x8a, 0x8c, 0x66, 0x06, 0x55, 0xe0, 0xe7, 0xed, 0xad, 0x41,
	0xf2, 0x01, 0x7a, 0x97, 0xd9, 0x34, 0xe6, 0xe1, 0x17, 0x5c, 0x8e, 0xc5, 0x4c, 0x06, 0xe0, 0x7a,
	0x71, 0x50, 0xf4, 0xa2, 0x96, 0xa3, 0x75, 0xa9, 0xad, 0x59, 0xe1, 0x42, 0xde, 0x60, 0x14, 0x74,
	0xfa, 0xad, 0xe1, 0x1e, 0x5d, 0x85, 0x83, 0xdf, 0x1e, 0x6c, 0xb9, 0xd6, 0xad, 0xdb, 0x74, 0x04,
	0x10, 0xca, 0x24, 0x91, 0xa2, 0x32, 0xbe, 0x15, 0x62, 0x1f, 0x1d, 0xca, 0x4c, 0x18, 0xb5, 0xa4,
	0x38, 0x5f, 0xad, 0xa3, 0x4f, 0xeb, 0xd0, 0x1a, 0x22, 0xd5, 0x9c, 0x09, 0x7e, 0x9b, 0xef, 0x6c,
	0x3e, 0xa0, 0x35, 0x66, 0xdb, 0x5e, 0x8d, 0x59, 0x7c, 0x25, 0xb8, 0x29, 0xbc, 0xd9, 0x90, 0x21,
	0xcf, 0x60, 0x2f, 0x96, 0x21, 0x8b, 0xed, 0xdf, 0x47, 0x6e, 0x4e, 0x19, 0xdb, 0x57, 0x69, 0xc3,
	0x0c, 0x5e, 0x2a, 0xb9, 0xe0, 0x22, 0xc4, 0x60, 0x37, 0x7f, 0x55, 0x0d, 0x36, 0xc6, 0x24, 0xb7,
	0xa5, 0x3e, 0x26, 0x2f, 0xe1, 0x01, 0x17, 0xe1, 0x69, 0xad, 0xc4, 0xdc, 0x97, 0x06, 0x2f, 0xb4,
	0x93, 0xda, 0xc5, 0x50, 0x6a, 0x6b, 0xdc, 0x6a, 0xa7, 0x99, 0xe6, 0x02, 0xb5, 0x3e, 0x65, 0x06,
	0xe7, 0x52, 0x2d, 0x9d, 0x27, 0x3e, 0x6d, 0xf0, 0xc1, 0xbf, 0xd6, 0x9a, 0xe7, 0x0d, 0x97, 0x0e,
	0xc1, 0x67, 0xe5, 0xa4, 0xe6, 0x26, 0xdd, 0x81, 0xb5, 0x01, 0xf5, 0x1a, 0x03, 0x7a, 0x08, 0x7e,
	0xba, 0xfa, 0x7c, 0xb1, 0x2b, 0x77, 0xc0, 0xf6, 0x19, 0x7f, 0xa6, 0x52, 0xa0, 0xc8, 0xdd, 0xf0,
	0x68, 0x19, 0xdb, 0x81, 0xba, 0xc1, 0xe5, 0x84, 0xdf, 0xa2, 0xb3, 0xc0, 0xa3, 0xab, 0xd0, 0x9e,
	0xba, 0xc1, 0xe5, 0x95, 0x66, 0x73, 0x2c, 0x56, 0xa2, 0x8c, 0xed, 0x7d, 0xe5, 0x1a, 0xb9, 0xa6,
	0x77, 0xe9, 0x1d, 0x98, 0xee, 0xb8, 0x41, 0x7e, 0xfb, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xc3,
	0x3d, 0x20, 0x4f, 0x06, 0x00, 0x00,
}
